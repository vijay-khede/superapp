@startuml
!theme cyborg-outline
title DeleteById HostingDetails Scenario
participant User
User -> CXFServlet: DELETE, HostingDetails
activate CXFServlet
CXFServlet -> HostingDetails: << delete >>
activate HostingDetails
HostingDetails -> CXFServlet: << instance >>
deactivate HostingDetails
CXFServlet -> HostingDetailsControllerImpl: deleteById(:HostingDetails)
activate HostingDetailsControllerImpl
HostingDetailsControllerImpl -> HostingDetailsService: softDelete(:HostingDetails)
activate HostingDetailsService
HostingDetailsService -> HostingDetailsServiceImpl: softDelete(:HostingDetails)
HostingDetailsServiceImpl -> HostingDetailsJPARepository: deleteById(:HostingDetails)
activate HostingDetailsJPARepository
HostingDetailsJPARepository -> EntityManager: delete(:HostingDetails)
activate EntityManager
EntityManager -> HostingDetailsJPARepository: << persisted HostingDetails >>
deactivate EntityManager
HostingDetailsJPARepository -> HostingDetailsService: << persisted HostingDetails >>
deactivate HostingDetailsJPARepository
HostingDetailsService -> HostingDetailsControllerImpl: << persisted HostingDetails >>
deactivate HostingDetailsService
HostingDetailsControllerImpl -> CXFServlet: << persisted HostingDetails >>
deactivate HostingDetailsControllerImpl
CXFServlet -> User: marshalled HostingDetails XML
deactivate CXFServlet
@enduml