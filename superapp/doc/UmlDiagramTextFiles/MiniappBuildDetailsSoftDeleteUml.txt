@startuml
!theme cyborg-outline
title DeleteById MiniappBuildDetails Scenario
participant User
User -> CXFServlet: DELETE, MiniappBuildDetails
activate CXFServlet
CXFServlet -> MiniappBuildDetails: << delete >>
activate MiniappBuildDetails
MiniappBuildDetails -> CXFServlet: << instance >>
deactivate MiniappBuildDetails
CXFServlet -> MiniappBuildDetailsControllerImpl: deleteById(:MiniappBuildDetails)
activate MiniappBuildDetailsControllerImpl
MiniappBuildDetailsControllerImpl -> MiniappBuildDetailsService: softDelete(:MiniappBuildDetails)
activate MiniappBuildDetailsService
MiniappBuildDetailsService -> MiniappBuildDetailsServiceImpl: softDelete(:MiniappBuildDetails)
MiniappBuildDetailsServiceImpl -> MiniappBuildDetailsJPARepository: deleteById(:MiniappBuildDetails)
activate MiniappBuildDetailsJPARepository
MiniappBuildDetailsJPARepository -> EntityManager: delete(:MiniappBuildDetails)
activate EntityManager
EntityManager -> MiniappBuildDetailsJPARepository: << persisted MiniappBuildDetails >>
deactivate EntityManager
MiniappBuildDetailsJPARepository -> MiniappBuildDetailsService: << persisted MiniappBuildDetails >>
deactivate MiniappBuildDetailsJPARepository
MiniappBuildDetailsService -> MiniappBuildDetailsControllerImpl: << persisted MiniappBuildDetails >>
deactivate MiniappBuildDetailsService
MiniappBuildDetailsControllerImpl -> CXFServlet: << persisted MiniappBuildDetails >>
deactivate MiniappBuildDetailsControllerImpl
CXFServlet -> User: marshalled MiniappBuildDetails XML
deactivate CXFServlet
@enduml